# This .cfg file is used to generate the GL interface and implementing class.
JavaOutputDir gensrc/classes
NativeOutputDir gensrc/native/jogl/gl4

ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL2ES1.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL2ES2.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL2ES3.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL3ES3.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL4ES3.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL2GL3.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL2.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL3.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL4.java
ExtendedInterfaceSymbolsIgnore ../build-temp/gensrc/classes/javax/media/opengl/GL3bc.java
ExtendedInterfaceSymbolsIgnore ../src/jogl/classes/javax/media/opengl/GLBase.java
ExtendedInterfaceSymbolsIgnore ../src/jogl/classes/javax/media/opengl/fixedfunc/GLMatrixFunc.java
ExtendedInterfaceSymbolsIgnore ../src/jogl/classes/javax/media/opengl/fixedfunc/GLPointerFunc.java
ExtendedInterfaceSymbolsIgnore ../src/jogl/classes/javax/media/opengl/fixedfunc/GLLightingFunc.java

Package javax.media.opengl
Style InterfaceAndImpl
JavaClass GL4bc
#Extends GL4bc GLBase
#Extends GL4bc GL
#Extends GL4bc GL2ES1
#Extends GL4bc GL2ES2
#Extends GL4bc GL2ES3
#Extends GL4bc GL3ES3
#Extends GL4bc GL4ES3
#Extends GL4bc GL2GL3
#Extends GL4bc GL2
#Extends GL4bc GL3
Extends GL4bc GL3bc
Extends GL4bc GL4
ImplPackage jogamp.opengl.gl4
ImplJavaClass GL4bcImpl
Implements GL4bcImpl GLBase
Implements GL4bcImpl GL
Implements GL4bcImpl GL2ES1
Implements GL4bcImpl GL2ES2
Implements GL4bcImpl GL2ES3
Implements GL4bcImpl GL3ES3
Implements GL4bcImpl GL4ES3
Implements GL4bcImpl GL2GL3
Implements GL4bcImpl GL2
Implements GL4bcImpl GL3
Implements GL4bcImpl GL3bc
Implements GL4bcImpl GL4

Include gl-common.cfg
Include gl-common-extensions.cfg
Include gl-desktop.cfg
Include gl3-desktop.cfg
Include gl3-common.cfg
Include gl2_es2-CustomJavaCode.cfg

# Manually implement glMapNamedBufferEXT as the size of the returned buffer
# can only be computed by calling another routine
ManuallyImplement glMapNamedBufferEXT
ForceProcAddressGen glMapNamedBufferEXT
JavaEpilogue glNamedBufferDataEXT bufferSizeTracker.setDirectStateBufferSize({0}, this, {1});

# Manuall implement glDebugMessageCallback* using the proc address resolver
ForceProcAddressGen glDebugMessageCallback
ForceProcAddressGen glDebugMessageCallbackAMD

# Force all of the methods to be emitted using dynamic linking so we
# don't need to link against any emulation library on the desktop or
# depend on the presence of an import library for a particular device
ForceProcAddressGen __ALL__

# Also force the calling conventions of the locally generated function
# pointer typedefs for these routines to APIENTRY
LocalProcAddressCallingConvention __ALL__ APIENTRY

EmitProcAddressTable true
ProcAddressTableClassName GL4bcProcAddressTable
GetProcAddressTableExpr ((GL4bcProcAddressTable)_context.getGLProcAddressTable())

# Pick up on-line OpenGL javadoc thanks to user cylab on javagaming.org forums
TagNativeBinding true

# Ignore extensions that are already picked up via the GL2ES1 interface
IgnoreExtension GL_EXT_point_parameters

# Add PixelStorei StateTracker
CustomJavaCode GL4bcImpl private static final int params_offset = 0; // just a helper for JavaPrologue ..

JavaPrologue glPixelStorei glStateTracker.setInt(pname, param);

JavaPrologue glGetIntegerv if ( glStateTracker.getInt(pname, params, params_offset) ) { return; }

JavaPrologue glFrustumf if ( !_context.hasFP32CompatAPI() ) {
JavaPrologue glFrustumf   glFrustum((double)left, (double)right, (double)bottom, (double)top, (double)zNear, (double)zFar);
JavaPrologue glFrustumf   return;
JavaPrologue glFrustumf }

JavaPrologue glOrthof if ( !_context.hasFP32CompatAPI() ) {
JavaPrologue glOrthof   glOrtho((double)left, (double)right, (double)bottom, (double)top, (double)zNear, (double)zFar);
JavaPrologue glOrthof   return;
JavaPrologue glOrthof }

JavaPrologue glDepthRangef if ( !_context.isGLES2Compatible() && !_context.hasFP32CompatAPI() ) {
JavaPrologue glDepthRangef   glDepthRange( (double)zNear, (double)zFar );  
JavaPrologue glDepthRangef   return;
JavaPrologue glDepthRangef }

JavaPrologue glClearDepthf if ( !_context.isGLES2Compatible() && !_context.hasFP32CompatAPI() ) {
JavaPrologue glClearDepthf   glClearDepth( (double)depth );  
JavaPrologue glClearDepthf   return;
JavaPrologue glClearDepthf }

Include gl-headers.cfg
Include gl3ext-headers.cfg

IncludeAs CustomJavaCode GL4bcImpl gl-impl-CustomJavaCode-common.java
IncludeAs CustomJavaCode GL4bcImpl gl-impl-CustomJavaCode-gl4bc.java
IncludeAs CustomJavaCode GL4bcImpl gl-impl-CustomJavaCode-gl2_es2.java
IncludeAs CustomCCode gl-impl-CustomCCode-gl4bc.c

Import javax.media.opengl.GLES1
Import javax.media.opengl.GLES2
Import javax.media.opengl.GL2ES1
Import javax.media.opengl.GL2ES2
Import javax.media.opengl.GL2ES3
Import javax.media.opengl.GL3ES3
Import javax.media.opengl.GL4ES3
Import javax.media.opengl.GL2GL3
Import javax.media.opengl.GL2
Import javax.media.opengl.GL3
Import javax.media.opengl.GL3bc
Import javax.media.opengl.GL4
Import com.jogamp.common.nio.Buffers
Import com.jogamp.opengl.util.GLBuffers
Import java.io.PrintStream
